"""adjust_group_related_tables

Revision ID: 467b7701eb1b
Revises: 367f848a6f19
Create Date: 2024-08-05 20:18:55.408273+07:00

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = '467b7701eb1b'
down_revision: Union[str, None] = '367f848a6f19'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('group_items',
    sa.Column('item_id', sa.Uuid(), nullable=False),
    sa.Column('group_id', sa.Uuid(), nullable=False),
    sa.Column('shared_at', sa.DateTime(), nullable=False),
    sa.ForeignKeyConstraint(['group_id'], ['groups.id'], ),
    sa.ForeignKeyConstraint(['item_id'], ['items.id'], ),
    sa.PrimaryKeyConstraint('item_id')
    )
    op.add_column('crypto_keys', sa.Column('enc_pri', sa.String(), nullable=False))
    op.drop_column('crypto_keys', 'private_key')
    op.add_column('groups', sa.Column('public_key', sa.String(), nullable=False))
    op.add_column('items', sa.Column('enc_credentials', sa.String(), nullable=False))
    op.drop_constraint('items_owner_id_fkey', 'items', type_='foreignkey')
    op.drop_column('items', 'credentials')
    op.drop_column('items', 'owner_id')
    op.add_column('personal_items', sa.Column('owner_id', sa.Uuid(), nullable=False))
    op.create_foreign_key(None, 'personal_items', 'users', ['owner_id'], ['id'])
    op.add_column('shared_items', sa.Column('shared_at', sa.DateTime(), nullable=False))
    op.add_column('shared_items', sa.Column('owner_id', sa.Uuid(), nullable=False))
    op.add_column('shared_items', sa.Column('actor_id', sa.Uuid(), nullable=False))
    op.create_foreign_key(None, 'shared_items', 'users', ['owner_id'], ['id'])
    op.create_foreign_key(None, 'shared_items', 'users', ['actor_id'], ['id'])
    op.drop_column('shared_items', 'private_key')
    op.drop_column('shared_items', 'shared_time')
    op.add_column('sharing_histories', sa.Column('shared_at', sa.DateTime(), nullable=False))
    op.drop_constraint('sharing_histories_provider_id_fkey', 'sharing_histories', type_='foreignkey')
    op.drop_column('sharing_histories', 'provider_id')
    op.add_column('users_in_groups', sa.Column('member_id', sa.Uuid(), nullable=False))
    op.add_column('users_in_groups', sa.Column('is_owner', sa.Boolean(), nullable=False))
    op.add_column('users_in_groups', sa.Column('enc_pri', sa.String(), nullable=False))
    op.drop_constraint('users_in_groups_user_id_fkey', 'users_in_groups', type_='foreignkey')
    op.create_foreign_key(None, 'users_in_groups', 'users', ['member_id'], ['id'])
    op.drop_column('users_in_groups', 'user_id')
    op.drop_column('users_in_groups', 'role')
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column('users_in_groups', sa.Column('role', sa.VARCHAR(), autoincrement=False, nullable=False))
    op.add_column('users_in_groups', sa.Column('user_id', sa.UUID(), autoincrement=False, nullable=False))
    op.drop_constraint(None, 'users_in_groups', type_='foreignkey')
    op.create_foreign_key('users_in_groups_user_id_fkey', 'users_in_groups', 'users', ['user_id'], ['id'])
    op.drop_column('users_in_groups', 'enc_pri')
    op.drop_column('users_in_groups', 'is_owner')
    op.drop_column('users_in_groups', 'member_id')
    op.add_column('sharing_histories', sa.Column('provider_id', sa.UUID(), autoincrement=False, nullable=False))
    op.create_foreign_key('sharing_histories_provider_id_fkey', 'sharing_histories', 'users', ['provider_id'], ['id'])
    op.drop_column('sharing_histories', 'shared_at')
    op.add_column('shared_items', sa.Column('shared_time', postgresql.TIMESTAMP(), autoincrement=False, nullable=False))
    op.add_column('shared_items', sa.Column('private_key', sa.VARCHAR(), autoincrement=False, nullable=False))
    op.drop_constraint(None, 'shared_items', type_='foreignkey')
    op.drop_constraint(None, 'shared_items', type_='foreignkey')
    op.drop_column('shared_items', 'actor_id')
    op.drop_column('shared_items', 'owner_id')
    op.drop_column('shared_items', 'shared_at')
    op.drop_constraint(None, 'personal_items', type_='foreignkey')
    op.drop_column('personal_items', 'owner_id')
    op.add_column('items', sa.Column('owner_id', sa.UUID(), autoincrement=False, nullable=False))
    op.add_column('items', sa.Column('credentials', sa.VARCHAR(), autoincrement=False, nullable=False))
    op.create_foreign_key('items_owner_id_fkey', 'items', 'users', ['owner_id'], ['id'])
    op.drop_column('items', 'enc_credentials')
    op.drop_column('groups', 'public_key')
    op.add_column('crypto_keys', sa.Column('private_key', sa.VARCHAR(), autoincrement=False, nullable=False))
    op.drop_column('crypto_keys', 'enc_pri')
    op.drop_table('group_items')
    # ### end Alembic commands ###
